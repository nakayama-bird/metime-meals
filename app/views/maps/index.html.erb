<div class='text-center mt-6'>
  <%= render 'search_post_form', search_form: @search_form %>
  <p id="latitude" data-value="<%= @map_center_lat %>"></p>
  <p id="longitude" data-value="<%= @map_center_lng %>"></p>
</div>
<div>
    <div>
    <button id="current-location-button" class="btn btn-primary text-left">
        <span class="material-icons">location_on</span>
        <span class="block text-sm">現在地を取得する</span>
    </button>
    </div>
<div id="map" class="h-[37.5rem] w-full"></div>
</div>
<%# モーダルを表示する要素 %>
<dialog id="post_modal" class="modal modal-bottom sm:modal-middle">
    <div class="modal-box">
        <form method="dialog">
            <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
        </form>
        <div class="post_show mt-4"></div>
    </div>
</dialog>
<script>
    let map, infoWindow;
    function initMap() {
    // 地図要所の取得
    const mapElement = document.getElementById('map');

    const latitudeElement = document.getElementById('latitude');
    const longitudeElement = document.getElementById('longitude');

    current_lat = parseFloat(latitudeElement.getAttribute('data-value'));
    current_lng = parseFloat(longitudeElement.getAttribute('data-value'));

    const lat =  current_lat? current_lat : 35.6803997;
    const lng =  current_lng? current_lng : 139.7690174;

    const defaultlocation = { lat: lat, lng: lng };

    // 初期表示の設定
    const mapOptions = {
        center: defaultlocation,
        zoom: 14,
        disableDefaultUI: true,
    }

    const map = new google.maps.Map(mapElement, mapOptions);
    infoWindow = new google.maps.InfoWindow();
    
    map.addListener('center_changed', function() {
        const center = map.getCenter();
        const lat = center.lat();
        const lng = center.lng();

        // `hidden_field`に値を設定
        document.getElementById('map_center_lat').value = lat;
        document.getElementById('map_center_lng').value = lng;
    });
    

    // 位置情報取得用のボタンの定義
    const locationButton = document.getElementById("current-location-button");
    locationButton.classList.add("custom-map-control-button");
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);

    locationButton.addEventListener("click", () => {
      // 現在地を取得
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            const pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent("現在地が取得できました");
            infoWindow.open(map);
            map.setCenter(pos);
          },
          () => {
            handleLocationError(true, infoWindow, map.getCenter());
          }
        );
      } else {
        // ブラウザがGeolocationをサポートしていない場合
        alert('このブラウザは位置情報に対応していません');
        handleLocationError(false, infoWindow, map.getCenter());
      }
    });


    //投稿が存在するかで条件分岐
    <% if @posts.present? %>
    // 投稿一覧を地図上で表示
    <% @posts.each do |post| %>
      (() => {
        const highRatingImage = "https://maps.google.com/mapfiles/kml/paddle/orange-stars.png";

        // 通常のピンアイコン（評価が低い投稿用）
        const defaultImage = "https://maps.google.com/mapfiles/kml/paddle/ylw-blank.png";

        // 投稿の評価に基づいてアイコンを選択
        const iconImage = <%= post.rating_before_type_cast + 1 %> >= 4 ? highRatingImage : defaultImage;
        let marker = new google.maps.Marker({
            position: { lat: <%= post.latitude %>, lng: <%= post.longitude %> },
            map: map,
            icon: iconImage,
            scaledSize: new google.maps.Size(50, 50),
        });

        marker.addListener('click', function() {
        const modalContent = `
         <div class="flex items-center">
                <svg class="w-4 h-4 text-secondary me-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                    <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z"/>
                </svg>
                <p class="mr-2 text-sm font-bold"><%= post.rating_before_type_cast + 1 %></p>
            </div>
          <div class='text-center'>
            <div><%= post.human_attribute_enum(:genre) %></div>
            <div class='text-lg font-semibold'><%= post.restaurant_name %></div>
            <p><%= post.address %></p>
            <div class="flex flex-wrap justify-center mt-3">
              <% post.tags.each do |tag| %>
                <div class="badge badge-ghost badge-base mr-1 mt-1"><%= tag.name %></div>
              <% end %>
            </div>
          </div>
          <div class='flex justify-center'>
            <% if post.post_images.present? %>
                    <%= image_tag post.post_images.first.to_s, class: 'object-contain w-60 h-60 mt-3' %>
                <% else %>
            <% end %>
          </div>
          <div class='text-center my-3'>
              <p><%= post.body.truncate(150) %></p>
          </div>
          <div class='text-center mt-3'>
              <%= link_to "詳細ページ", post_path(post), class: "btn btn-primary" %>
          </div>
        `;
        // post_showに取得したModalContentを代入してくれる
        document.querySelector('.post_show').innerHTML = modalContent;
        document.getElementById('post_modal').showModal();
        });
    })();
    <% end %>
    <% else %>
        console.log('投稿が存在しません');
    <% end %>
    }
    
  // 取得できなかった時の処理
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    alert('位置情報の取得に失敗しました。');
    infoWindow.setPosition(pos);
    infoWindow.setContent(
      browserHasGeolocation
        ? "現在地の取得に失敗しました"
        : "このブラウザは位置情報に対応していません"
    );
    infoWindow.open(map);
  }

  window.initMap = initMap;
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap"></script>